Arithmetic♪ Suppose x is an int variable that holds a positive integer. Consider the following five expressions: a. x % 100 / 10 b. x / 10 % 10 c. (x - x % 100) / 10 d. x / 10 - x / 100 * 10 e. (x - x / 100 * 100) / 10 Which one of them produces a value different from the other four for some values of x?♪a.♪b.♪c.♪d.♪e. 16♪c.
Arithmetic♪ Which of the following statements is equivalent to if (a == 0 || b*b - 4*a*c <= 0) return false; else return true;♪return a == 0 || b*b - 4*a*c <= 0;♪return a == 0 && b*b - 4*a*c > 0;♪return a != 0 || b*b - 4*a*c > 0;♪return a != 0 && b*b - 4*a*c > 0;♪None of the above♪return a != 0 && b*b - 4*a*c > 0;
Arithmetic♪ Which of the following statements DOES NOT print 2006?♪System.out.println("200" + 6);♪System.out.println(200 + "6");♪System.out.println((int)(2006 * 1.0000002));♪System.out.println(2006 * 2000000 / 2000000);♪System.out.println(2006 / 1000 * 1000 +♪System.out.println(2006 * 2000000 / 2000000);
Arithmetic♪ What is the output from the following statement? System.out.println( new Double((new Integer(200)).intValue() / 6).doubleValue());♪33♪33.0♪33.334♪33.333333333333336♪ClassCastException♪33.0
Arithmetic♪ The if-else statement if (a <= c) { if (b >= c) return true; else return false; } else { if (d >= a) return true; else return false; } is equivalent to which of the following statements?♪return a <= c && b >= c && a > c && d >= a;♪return (a <= c || b >= c) && (a > c || d >= a);♪return a <= c && b >= c || a > c && d < a;♪return !((a <= c && b >= c) || (a > c && d >= a));♪return !((a > c || b < c) && (a <= c || d < a));♪return !((a > c || b < c) && (a <= c || d < a));
Arithmetic♪ What is the size of a double variable in Java?♪2 bytes♪4 bytes♪8 bytes♪It depends on a compiler setting♪It depends on the operating system♪8 bytes
Arithmetic♪ Which of the following best describes the set of all pairs of values for boolean variables a and b, such that (!a && b) == !(a || b) evaluates to true?♪Empty set♪Only one pair: a == true, b == false♪Two pairs in which a == true♪Two pairs in which a != b♪All four possible combinations of values 46♪Two pairs in which a == true
Arithmetic♪ What is the output of the following code? int sum = 0, p = 1; for (int count = 1; count <= 50; count++) { sum += p; p *= 2; } System.out.println(sum);♪-1♪562949953421311 ( = 249 - 1)♪1125899906842623 ( = 250 - 1)♪ArithmeticException♪IllegalArgumentException♪-1
Arithmetic♪ Given double x = 5, y = 2; what is the value of m after the following statement is executed? int m = (int)(x + y + x / y - x * y - x / (10*y));♪-1♪-0.75♪-0.5♪0♪1 60♪0
Arithmetic♪ Which of the following conditions must always be true after the following while loop finishes? while (hours < hours0 || (hours == hours0 && mins < mins0)) { mins += 5; if (mins >= 60) { mins -= 60; hours++; } }♪hours > hours0 && mins >= mins0♪hours >= hours0 && mins >= mins0♪hours < hours0 || (hours == hours0 && mins < mins0)♪hours >= hours0 && (hours != hours0 && mins >= mins0)♪hours >= hours0 && (hours != hours0 || mins >= mins0) 62♪hours >= hours0 && (hours != hours0 || mins >= mins0) 62
Arithmetic♪ The method xProperty is defined as follows: public boolean xProperty(int a) { return a == 2 * (a / 10 + a % 10); } For which of the following values of a does xProperty(a) return true?♪2♪8♪18♪28♪128 72♪18
Arithmetic♪ Consider the method public int[] copyX(int[] arr) { int[] result = new int[arr.length]; for (int i = 0; i < arr.length; i++) { if (arr[i] <= 0) break; if (arr[i] > 10) break; result[i] = arr[i]; } return result; } Suppose it is rewritten as follows: public int[] copyX(int[] arr) { int[] result = new int[arr.length]; int i = 0; while (< condition >) { result[i] = arr[i]; i++; } return result; } Which of the following expressions can replace < condition > so that the second version is equivalent to the first one (that is, for any int[] parameter arr, it returns the same result as the first version)?♪i < arr.length && (arr[i] <= 0 || arr[i] > 10)♪(arr[i] <= 0 || arr[i] > 10) || i >= arr.length♪(arr[i] > 0 || arr[i] <= 10) && i < arr.length♪i < arr.length && !(arr[i] <= 0 && arr[i] > 10)♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74
Arithmetic♪ Given double x = < any positive value less than 2003 >; which of the following code fragments set int y to the smallest integer that is NOT less than three quarters of x? I. int y = (int)(3 * x / 4); if (y < 3 * x / 4) y++; II. int y = 1; while (y < 3 * x / 4) y++; III. int y = 2010 - (int)(2010 - x * 3 / 4);♪I only♪II only♪I and II♪I and III♪I, II, and III♪I, II, and III
Arithmetic♪ Alicia is five years older than her brother Ben. Three years from now Alicia’s age will be twice Ben’s age. How old are Alicia and Ben now? Hal wrote the following program to solve this puzzle: public class AliciaAndBen { public static void main(String[] args) { for (int a = 1; a <= 100; a++) for (int b = 1; b <= 100; b++) if (< condition >) System.out.println("Alicia is " + a + " and Ben is " + b); } } Which of the following expressions should replace < condition > in Hal’s program so that it displays the correct solution to the puzzle?♪(a == b - 5) && (a - 3 == 2 * (b - 3))♪a == b + 5 && a + 3 == 2 * b + 6♪(a == (b + 5)) && ((a + 3) == (2 * b + 3))♪a == (b - 5) && (2 * a - 3) == (b - 3)♪None of the above works♪a == b + 5 && a + 3 == 2 * b + 6
Arithmetic♪ If a is an int array of length 2 and a[0] and a[1] hold values 7 and 13 respectively, what are their values after fun(a) is called? The method fun is defined as follows: public void fun(int[] x) { x[0] = (int)(100.0 * x[0] / (x[0] + x[1])); x[1] = (int)(100.0 * x[1] / (x[0] + x[1])); }♪7 and 13♪35 and 27♪34 and 64♪35 and 65♪34 and 66♪35 and 27
Arithmetic♪ What are the values of a and b after the following code fragment is executed? int a = 3, b = 5; for (int i = 0; i < 10; i++) { int s = a + b; b = a - b; a = s; }♪0 and 96♪96 and 0♪96 and 96♪96 and 160♪160 and 96♪96 and 160
Arithmetic♪ If int weekDay contains the code for the day of the week on November 1 (0 for Sunday, 1 for Monday, ..., 6 for Saturday), which of the following expressions gives the date for Thanksgiving (the fourth Thursday in November)?♪weekDay + 26♪26 - weekDay♪(4 - weekDay) % 7 + 22♪(11 - weekDay) % 7 + 22♪(weekDay + 3) % 7 + 22 92♪(11 - weekDay) % 7 + 22
Arithmetic♪ Given Random generator = new Random(); int bigNum = 10000; int r = generator.nextInt(bigNum); which of the following expressions is the best way to initialize x to the value of a randomly chosen element from an array arr of 3 values? (The odds for choosing any element must be the same or almost the same.)♪x = arr[r / bigNum * 3];♪x = arr[(int)(3.0 * r / bigNum)];♪x = arr[(int)(2.9 * r / bigNum)];♪x = arr[(int)(3.0 * (r - 1) / (bigNum - 1))];♪x = arr[3 * (int)((double)r / bigNum)]; 1♪x = arr[(int)(3.0 * r / bigNum)];
Arithmetic♪ Given three integer variables, a, b, and c, with small non-negative values, which of the following code fragments tests the condition that any two of the values are zeroes while the third one is positive? The variable ok should be set to true if and only if the above condition is true. I. boolean ok = a == 0 && b == 0 && c > 0 || b == 0 && c == 0 && a > 0 || c == 0 && a == 0 && b > 0; II. boolean ok = a + b + c > 0 && a*b + b*c + c*a == 0; III. boolean ok = a > 0 || b > 0 || c > 0; if (ok) ok = a + b == 0 || b + c == 0 || c + a == 0;♪I only♪II only♪I and II♪I and III♪I, II, and III 94♪I, II, and III 94
Arithmetic♪ What is the output from the following code? int a = 1, b = 2, c = 3; a += b + c; b += a + c; c += a + b; System.out.println(a + " " + b + " " + c);♪3 3 4♪3 5 6♪5 4 3♪5 8 13♪6 11 20♪6 11 20
Arithmetic♪ What is the value of y after the following code is executed? int x = 123, y = 0; while (x > 0) { y *= 10; y += x % 10; x /= 10; }♪1♪3♪6♪12♪321♪321
Arithmetic♪ Which of the following conditions is always true after the while loop in the following code fragment has finished (assuming it executes without errors)? int k = 0, n = 10; while (k < n && a[k] >= 0) k++;♪k >= n && a[k] < 0♪k < n && a[k] < 0♪k < n || a[k] < 0♪k >= n || a[k] < 0♪None of the above♪k >= n || a[k] < 0
Arithmetic♪ Which of the following statements does NOT display 2/3?♪System.out.println("2/3");♪System.out.println("2" + "/" + "3");♪System.out.println(2/3);♪System.out.println(2 + "/" + 3);♪System.out.println((int)2 + "/" + (int)3); 2. If array arr has five elements with values 0 1 2 3 4, what are the values in arr after the following code is executed? for (int k = 0; k < 5; k++) arr[k] = arr[arr[k]]; (A) 0 1 2 3 4 (B) 1 2 3 4 0 (C) 1 2 2 2 2 (D) 0 0 0 0 0 (E) 1 2 3 4 4 3. If c and d are boolean variables, which one of the answer choices is NOT equivalent to the following expression? (c && d) != (c || d) (A) (c && !d) || (!c && d) (B) (c || d) && (!c && !d) (C) (c || d) && (!c || !d) (D) (c || d) && !(c && d) (E) c != d 120♪System.out.println(2/3);
Arithmetic♪ If c and d are boolean variables, which one of the answer choices is NOT equivalent to the following expression? (c && d) != (c || d)♪(c && !d) || (!c && d)♪(c || d) && (!c && !d)♪(c || d) && (!c || !d)♪(c || d) && !(c && d)♪c != d 120♪(c || d) && (!c && !d)
Arithmetic♪ Consider the following two versions of the method mixUp: public void mixUp(int[] x, int[] y) { x[0] = x[0] - 2 * x[0] * y[1]; y[1] = y[1] - 2 * x[0] * y[0]; } public void mixUp(int[] x, int[] y) { int d = 2 * x[0] * y[1]; x[0] -= d; y[1] -= d; } Suppose the following arrays are declared and initialized: int[] a = {1, 1}, b = {0, 0}, c = {1, 1}; Which of the following calls to mixUp result in the same values in a, b, and c for both versions of the code? I. mixUp(a, a) II. mixUp(a, b) III. mixUp(a, c)♪I only♪II only♪I and II♪II and III♪I, II, and III 1♪I and II
Arithmetic♪ Which of the following arithmetic expressions maps the values x = 0, 1, 2, 3, 4, 5, 6 onto y = 4, 3, 9, 8, 7, 6, 5, respectively?♪y = 11 - x + (x + 4) % 7;♪y = (4 - x) % 7 + 2 * x;♪y = 3 + (8 - x) % 7;♪y = 9 - (x - 2) % 7;♪y = 4 + x % 7 - 2 * x; 126♪y = 3 + (8 - x) % 7;
Arithmetic♪ What is the output from the following code? int x = 5, y = 2; System.out.println(x/y - (double)(x/y));♪0.0♪0.5♪-0.5♪-2.5♪None of the above♪0.0
Arithmetic♪ What are the values of u and v after the following code is executed? int u = 3, v = 5; u += v; v += u; u -= v; v -= u;♪0, 0♪3, 5♪5, 3♪-5, -3♪-5, 18♪-5, 18
Arithmetic♪ Which of the following statements DOES NOT display 9.95?♪System.out.println(9 + 0.95);♪System.out.println(995/100.0);♪System.out.println(9. + 95/100);♪System.out.println(9 + 95.0/100);♪System.out.println(9 + "." + 95); 138♪System.out.println(9. + 95/100);
Arithmetic♪ Which of the following could safely appear and make sense in place of < condition > in some suitable context? if ( < condition > ) msg = new Message("o"); I. msg == null || msg.getStatus().equals("x") II. msg.getStatus().equals("x") || msg == null III. "x".equals(msg.getStatus()) || msg == null♪I only♪II only♪I and II♪II and III♪I, II, and III 142♪I only
Classes♪ Which of the following can replace < missing code > in the CountDown class, so that it compiles with no errors, and Test’s main displays 321?♪count--; return count;♪return count; count--;♪return count--;♪return --count;♪None of the above♪return count--;
Classes♪ Suppose the class CountDown has been completed correctly, as described in Question 8, and we have replaced CountDown c = new CountDown(3); with CountDown c = new CountDown3(); in main . The project still compiles and the output is still 321. Which of the following can replace < missing code > in CountDown3’s constructor? I. System.out.print("321"); II. super(3); III. super(); count = 3;♪I only♪II only♪I or II♪II or III♪None of these will work♪I or II
Classes♪ Suppose the class CountDown3 has been completed correctly, as described in Question 9, and we have added public interface IntIterator { int next(); boolean hasMore(); } to the project. We want to replace in main CountDown c = new CountDown(3); with IntIterator c = new CountDown3(); For this to work, we need to add implements IntIterator to CountDown’s and/or CountDown3’s headers. Which of the following will work? I. Adding implements IntIterator to CountDown’s header only II. Adding implements IntIterator to CountDown3’s header only III. Adding implements IntIterator to both CountDown’s and CountDown3’s headers♪I only♪II only♪I and II♪II and III♪I, II, and III 6♪I, II, and III 6
Classes♪ Consider the following classes: public class A { public String toString() { return "A"; } } public class B extends A { } public class C extends B { public String toString() { return super.toString() + "C"; } } What is the output from A a = new C(); System.out.println(a);♪A♪C♪AC♪NoSuchMethodException♪B@ddddddC, where dddddd is a sequence of hex digits 1♪AC
Classes♪ Given public class Plus { private String chars = "++++++++++"; public void printSome(int n) { if (n > 1) printSome(n-1); System.out.println(chars.substring(0, n)); } } public class Minus extends Plus { private String chars = "----------"; public void printSome(int n) { System.out.println(chars.substring(0, n)); if (n > 1) super.printSome(n-1); } } what is the output of Minus m = new Minus(); m.printSome(3);♪--- -- -♪- ++ ---♪--- - ++♪--- + --♪--- + ++ 12♪--- - ++
Classes♪ Consider the following interface and class: public interface Readable { void read(); } public abstract class Code implements Readable { public Code(String txt) { < code not shown > } public abstract void read(); public void save() { < code not shown > } } Which of the following statements will compile and execute without errors?♪Readable c = new Readable();♪Code c = new Code();♪Readable c = new Code("***");♪Code c = new Readable("***");♪None of the above♪None of the above
Classes♪ Which of the following can replace Line 1 in the MovieWithRating constructor, so that MovieWithRating m = new MovieWithRating("Monster House", "PG"); System.out.println(m.getTitle()); displays Monster House♪title = t;♪setTitle(t);♪super.setTitle(t);♪super(); setTitle(t);♪None of the above will work♪None of the above will work
Classes♪ Suppose we want System.out.println(new MovieWithRating("Monster House", "PG")); to display Monster House, PG Which of the following will work? I. Adding a method public String toString() { return getTitle() + ", " + getRating(); } to the Movie class. II. Adding a method public String toString() { return getTitle() + ", " + getRating(); } to the MovieWithRating class. III. Adding a method public String toString() { return this.getTitle() + ", " + rating; } to the MovieWithRating class.♪I only♪II only♪I and II♪II and III♪I, II, and III 22♪I, II, and III 22
Classes♪ Consider, in addition, the class public class MovieTheater { public static void show(Movie m) { System.out.println("Showing: " + m.getTitle()); } public static void show(MovieWithRating m) { System.out.println("Showing: " + m.getTitle() + ", " + m.getRating()); } } and the class public class MovieTest { public static void main(String[] args) { Movie m1 = new MovieWithRating("Monster House", "PG"); MovieWithRating m2 = new MovieWithRating("Class Action", "R"); MovieTheater.show(m1); MovieTheater.show(m2); } } What is the result when these classes are compiled, and main in MovieTest is executed?♪Syntax error in the MovieTheater class♪Syntax error in the MovieTest class♪Compiles fine and displays Showing: Monster House Showing: Class Action♪Compiles fine and displays Showing: Monster House Showing: Class Action, R♪Compiles fine and displays Showing: Monster House, PG Showing: Class Action, R♪Compiles fine and displays Showing: Monster House Showing: Class Action, R
Classes♪ Consider the following classes: public class Greeting { public String getMessage() { return "How do you do, Mr. "; } private String getName() { return "Smith"; } public String toString() { return getMessage() + getName(); } } public class InformalGreeting extends Greeting { public String getMessage() { return "Hi, "; } private String getName() { return "Bob"; } public String toString() { return super.toString(); } } public class VeryInformalGreeting extends InformalGreeting { public String getMessage() { return "'sup, "; } private String getName() { return "dude"; } } What does System.out.println(new VeryInformalGreeting()); display?♪How do you do, Mr. Smith♪Hi, Bob♪'sup, Bob♪'sup, dude♪'sup, Smith♪'sup, Smith
Classes♪ If Likable extends Comparable, Friend extends Person, Person implements Comparable, Friend implements Likable, and the variables Person stranger and Friend friend are declared and initialized, which of the following statements is NOT valid?♪Person x = friend;♪Comparable x = stranger;♪Comparable x = friend;♪Likable x = stranger;♪Likable x = friend;♪Likable x = stranger;
Classes♪ Consider the following class Word and its subclass SecondWord: public class Word { protected String word; public Word(String w) { word = w; } public String toString() { return word; } } public class SecondWord extends Word { private String word; public SecondWord(String w1, String w2) { < code not shown > } public String toString() { < code not shown > } } Suppose System.out.println(new SecondWord("Good", "day")); prints Good day Which of the following statements could complete SecondWord’s constructor and toString method? I. Constructor: { super(w1); word = w2; } toString: { return super.toString() + " " + word; } II. Constructor: { super(w1); word = w2; } toString: { return super.word + " " + word; } III. Constructor: { super.word = w1; word = w2; } toString: { return super.word + " " + word; }♪I only♪II only♪I and II♪II and III♪I, II, and III♪I and II
Classes♪ Consider the following base and derived classes: public class B { public String with(B x) { return "B"; } } public class D extends B { public String with(D x) { return "D"; } } What is the result from the following code? B b = new B(); B d = new D(); System.out.println(b.with(b) + b.with(d) + d.with(b) + d.with(d));♪BBBB♪BDBD♪BBBD♪BBDD♪Syntax error: undefined method♪BBBB
Classes♪ What is displayed by System.out.println("1" + new Integer(2) + 3);♪The statement has a syntax error and won’t compile♪6♪15♪123♪ClassCastException♪123
Classes♪ Consider the following classes: public class Year2005 { public String toString() { return "2005"; } } public class Test2005 extends Year2005 { public void print() { < missing statement > } } Which of the following could replace < missing statement > so that Test2005 would compile with no errors and Test2005 test = new Test2005(); test.print(); would display 2005? I. System.out.println(new Year2005()); II. System.out.println(new Test2005()); III. System.out.println(this);♪I only♪II only♪I and II♪II and III♪I, II, and III♪I, II, and III
Classes♪ What is the minimum set of methods that must be defined in classB for it to compile with no errors?♪No particular methods are required♪methodA♪methodB♪methodA and methodB♪methodA, methodB, and toString 1♪No particular methods are required
Classes♪ Which of the following statements causes a syntax error?♪InterfaceA obj = new ClassA();♪InterfaceB obj = new ClassA();♪InterfaceA obj = new ClassB();♪InterfaceB obj = new ClassB();♪ClassA obj = new ClassB(); 50♪InterfaceB obj = new ClassA();
Classes♪ For any object obj, a call obj.getClass().getName() returns the name of obj’s class. Suppose System.out.println(new A() + "+" + new B()); displays A+B Which of the following implementations would produce that result? I. Class A has a method public String toString() { return "A"; } and class B has a method public String toString() { return "B"; } II. Both class A and class B extend class X that has a method public String toString() { return getClass().getName(); } III. Both class A and class B extend an abstract class X that has methods public abstract String getName(); public String toString() { return getName(); } Class A has a method public String getName() { return "A"; }; and class B has a method public String getName() { return "B"; };♪I only♪II only♪I and II♪II and III♪I, II, and III 56♪I, II, and III 56
Classes♪ If Crossword extends Puzzle and implements Solvable, and Puzzle p = new Puzzle(); Crossword cw = new Crossword(10, 20); are declared, which of the following statements will cause a syntax error?♪p = cw;♪cw = new Puzzle();♪p = new Crossword(10, 20);♪Solvable x = new Crossword(10, 20);♪All of the above will compile with no errors. 58♪cw = new Puzzle();
Classes♪ Given that System.out.println(new CompulsiveGambler(300)); displays 300, which of the following could replace < missing statements > in CompulsiveGambler’s constructor? I. addMoney(m); II. super(m); III. super(); addMoney(m);♪I only♪II only♪I or II♪II or III♪I, II, or III 1♪II only
Classes♪ What is the output of the following code segment? CompulsiveGambler x = new CompulsiveGambler(300); x.liveAnotherDay(); System.out.println(x);♪200♪150♪100♪1♪0 1♪1
Classes♪ Consider the following classes: public abstract class PointXY { private int x, y; public PointXY(int x, int y) {this.x = x; this.y = y; } public int getX() { return x; } public int getY() { return y; } public String toString() { return "(" + getX() + "," + getY() + ")"; } public abstract PointXY moveBy(int dx, int dy); public abstract double distanceFrom(PointXY p); } public abstract class CartesianPoint extends PointXY { public CartesianPoint(int x, int y) { < Code not shown > } public double distanceFrom(PointXY p) { < Code not shown > } } public class BoardPosition extends CartesianPoint { < code not shown > } Which of the following is the minimal set of public constructors and/or methods required in the BoardPosition class, so that the statements BoardPosition pos = new BoardPosition(0, 0); System.out.println((int)pos.moveBy(10, 10).distanceFrom(pos)); compile and execute with no errors?♪public PointXY moveBy(int dx, int dy)♪public BoardPosition(int x, int y) and public PointXY moveBy(int dx, int dy)♪public double distanceFrom(PointXY pos) and public PointXY moveBy(int dx, int dy)♪public double distanceFrom(BoardPosition pos) and public BoardPosition moveBy(int dx, int dy)♪public BoardPosition()and public BoardPosition(int x, int y) and public PointXY moveBy(int dx, int dy) 70♪public BoardPosition(int x, int y) and public PointXY moveBy(int dx, int dy)
Classes♪ Kim’s teacher specified that System.out.println( new IncomingCallWithName("800-749-2000", "Pizza Palace")); should display 800-749-2000 Pizza Palace Which of the following statements can replace < missing statement > in the IncomingCallWithName constructor to achieve that? I. super(tel); II. setTelephoneNumber(tel); III. telephoneNumber = tel;♪I only♪II only♪I and II♪II and III♪I, II, and III 1♪I and II
Classes♪ What is the result of the following code segment? Call[] calls = new Call[3]; calls[0] = new IncomingCall("888-888-8888"); // Line 1 calls[1] = (IncomingCallWithName)calls[0]; // Line 2 System.out.println(calls[0] + " " + calls[1] + " " + calls[2]); // Line 3♪Syntax error on Line 1♪Syntax error on Line 2♪ClassCastException on Line 2♪NullPointerException on Line 3♪Compiles and runs with no errors; the output is: 888-888-8888 888-888-8888 null 80♪ClassCastException on Line 2
Classes♪ After correctly completing the IncomingCallWithName constructor, as requested in Question 13, Kim wrote the following test code: IncomingCall call = new IncomingCallWithName("800-749-2000", "Pizza Palace"); System.out.println(call); The output was 800-749-2000 Pizza Palace Kim’s teacher suggested that Kim try to compile and run the program again with IncomingCallWithName’s toString method commented out. What would be the result of this experiment?♪Syntax error “IncomingCallWithName should be declared abstract”♪Infinite recursion, stack overflow♪The program compiles with no errors and displays 800-749-2000♪The program compiles with no errors and displays the same output as before, 800-749-2000 Pizza Palace♪The program compiles with no errors and displays IncomingCallWithName@47e553 1♪The program compiles with no errors and displays the same output as before, 800-749-2000 Pizza Palace
Classes♪ Suppose calls and name are initialized as follows: Call[] calls = { new IncomingCallWithName("800-749-2000", "Pizza Palace"), new IncomingCall("888-237-3757"), new IncomingCallWithName("800-555-2134", "Burger Heaven"), }; String name = "Pizza Palace"; The following code segment is intended to count the number of Call objects in the calls array that came from a given source: int count = 0; for (Call call : calls) if ( < condition > ) count++; Which of the following replacements for < condition > will compile with no errors and correctly set count to 1?♪call.getSource().indexOf(name) >= 0♪((IncomingCallWithName)call).getSource().indexOf(name) >= 0♪call.getName().equals(name)♪((IncomingCallWithName)call).getName().equals(name)♪None of the above♪call.getSource().indexOf(name) >= 0
Classes♪ Which of the following declarations is invalid?♪Person p = new Person("Mia Hamm");♪SoccerPlayer p = new Person("Mia Hamm");♪Comparable<Person> p = new Person("Mia Hamm");♪Person p = new SoccerPlayer("Kristine Lilly", 0);♪Comparable<Person> p = new SoccerPlayer("Kristine Lilly", 0);♪SoccerPlayer p = new Person("Mia Hamm");
Classes♪ What is the result of the following code? Person[] players = {new SoccerPlayer("Mia Hamm", 6), new SoccerPlayer("Kristine Lilly", 5)}; System.out.println(players[0].compareTo( (SoccerPlayer)players[1])); // Line ***♪Syntax error in the class Person: other.name is not accessible♪Syntax error in the class SoccerPlayer: compareTo is redefined♪ClassCastException on Line ***♪Compiles and runs with no errors; displays 1♪Compiles and runs with no errors; displays 2 1♪Compiles and runs with no errors; displays 2 1
Classes♪ Which of the following can replace < missing statements > in MovingPoint’s constructor? 2001 115♪super();♪super(0, 0);♪setX(0); setY(0);♪super(); setX(p.getX()); setY(p.getY());♪// set myPoint to p: 1♪super(0, 0);
Classes♪ Which line in the following code segment causes a syntax error? Point p1 = new Point(100, 100); // Line 1 MovingPoint p2 = new MovingPoint(p1); // Line 2 Point p3 = new MovingPoint(p2); // Line 3 MovingPoint p4 = new MovingPoint(p2); // Line 4♪No syntax errors in these lines♪Line 1♪Line 2♪Line 3♪Line 4 2♪No syntax errors in these lines
Classes♪ What is the output of the following code? Point p = new Point(0, 0); MovingPoint mp = new MovingPoint(p); mp.move(1, 1); System.out.println(p + " " + p.equals(mp));♪NullPointerException♪ClassCastException♪(0, 0) true♪(0, 0) false♪(1, 1) true 116♪(1, 1) true 116
Classes♪ Suppose we have found the ToggleSwitch.class file but have no access to its source code. Which of the following code segments, if compiles with no errors, will convince us that ToggleSwitch implements Toggleable? I. Toggleable x = new ToggleSwitch(); II. ToggleSwitch x = new ToggleSwitch(); x.toggle(); III. ToggleSwitch x = new ToggleSwitch(); if (!x.isOn()) x.toggle();♪I only♪II only♪III only♪II and III♪I, II, and III♪I only
Classes♪ A set of “radio buttons” is a user interface control used to choose one of several options. For example: small medium large Consider the following class RadioSet that implements a set of radio buttons: public class RadioSet extends CheckBoxSet { // creates an array of nButtons buttons and sets // the k-th button to "on" // precondition: nButtons > k >= 0 public RadioSet(int nButtons, int k) { super(nButtons); push(k); } // sets the k-th button to "on," all other buttons to "off" public void push(int k) { < missing code > } // returns the number of the button that is "on"; // throws an exception if none are "on" { for (int k = 0; k < numButtons(); k++) if (isOn(k)) return k; throw new IllegalStateException(); } } Which of the following can replace < missing code > in this class? I. clear() push(k); II. clear() super.push(k); III. for (int j = 0; j < numButtons(); j++) if (buttons[j].isOn()) buttons[j].toggle(); buttons[k].toggle();♪I only♪II only♪I and II♪II and III♪I, II, and III♪II only
Classes♪ What is the result of the following code segment? int i = new Integer(0); // Line 1 if (!i.equals(0)) // Line 2 System.out.println(i + " is not equal to " + 0); else System.out.println("Done");♪Syntax error on Line 1♪Syntax error on Line 2♪ClassCastException♪0 is not equal to 0♪Done♪Syntax error on Line 2
Classes♪ Which of the following code segments compiles with no errors?♪Drawable picture = new Picture(new Line(0, 0, 100, 100));♪Drawable picture = new Picture(); picture.add(new Line(0, 0, 100, 100));♪Picture picture1 = new Picture(); Picture picture2 = new Picture(picture1);♪Picture picture = new Picture(); picture.pictures.add(new Line(0, 0, 100, 100));♪Drawable picture = new Picture(); ((Picture)picture).add(new Picture()); 14. Consider the following code segment: Picture picture = new Picture(); picture.add(new Line(100, 100, 200, 50)); picture.add(new Line(200, 50, 300, 100)); Picture box = new Picture(); picture.add(box); box.add(new Line(100, 100, 100, 300)); box.add(new Line(100, 300, 300, 300)); box.add(new Line(300, 300, 300, 100)); box.add(new Line(300, 100, 100, 100)); Which of the following pictures will be displayed when picture.draw(g) is called from an appropriate paint method within the graphics context g? (A) (B) (C) Empty picture (D) (E) 144♪Drawable picture = new Picture(); ((Picture)picture).add(new Picture()); 14. Consider the following code segment: Picture picture = new Picture(); picture.add(new Line(100, 100, 200, 50)); picture.add(new Line(200, 50, 300, 100)); Picture box = new Picture(); picture.add(box); box.add(new Line(100, 100, 100, 300)); box.add(new Line(100, 300, 300, 300)); box.add(new Line(300, 300, 300, 100)); box.add(new Line(300, 100, 100, 100)); Which of the following pictures will be displayed when picture.draw(g) is called from an appropriate paint method within the graphics context g? (A) (B) (C) Empty picture (D) (E) 144
Classes♪ Suppose the class Box extends Picture and has the following constructor: public Box(int x, int y, int width, int height) { add(new Line(x, y, x + width, y)); add(new Line(x + width, y, x + width, y + height)); add(new Line(x + width, y + height, x, y + height)); add(new Line(x, y + height, x, y)); } Suppose the statements Box box = new Box(100, 100, 300, 200); box.draw(g); — when executed from an appropriate paint method within the graphics context g — draw a box with the upper left corner at (100, 100), width 300 and height 200. Besides the above constructor, which methods must be supplied in the Box class for this to happen?♪No methods are needed♪add(Drawable)♪draw(Graphics)♪add(Drawable) and draw(Graphics)♪add(Drawable), add(Line), and draw(Graphics)♪No methods are needed
Classes♪ Suppose the following methods have been added to the Line class: public String getName() { return "Line"; } public String toString() { return "[" + getName() + /* " " + xBeg + " " + yBeg + " " + xEnd + " " + yEnd + */ "]"; } Also, the following methods have been added to the Picture class: public String getName() { return "Picture"; } public String toString() { String str = "[" + getName() + " "; for (Drawable obj : pictures) str += obj; return str + "]"; } Finally, the following method has been added to the Box class mentioned in the previous question: public String getName() { return "Box"; } What is the output of the following code? Box box = new Box(100, 100, 100, 100); box.add(new Line(100, 100, 200, 200)); box.add(new Line(100, 200, 200, 100)); Picture picture = new Picture(); picture.add(box); System.out.println(picture);♪[Picture [Line][Line][Line][Line]][Line][Line]♪[Picture [Box [Line][Line][Line][Line]]]♪[Picture [Box [Line][Line][Line][Line][Line][Line]]]♪[Picture [Picture [Line][Line][Line][Line]][Line][Line]]♪[Picture [Picture [Line][Line][Line][Line][Line][Line]]] 146♪[Picture [Box [Line][Line][Line][Line][Line][Line]]]
Loops♪ What is the value of i after the following code is executed? int i = 0, n = 100; for (i++; i < n; n--) i++;♪49♪50♪51♪99♪100♪51
Loops♪ What values are stored in the array nums after the following code is executed? int[] nums = {3, 0, 4, 2, 1}; int len = nums.length; for (int i = 0; i < len; i++) for (int count = 1; count <= len; count++) nums[i] = nums[nums[i]];♪0, 0, 0, 0, 0♪0, 1, 2, 3, 4♪0, 0, 4, 2, 0♪0, 4, 2, 1, 3♪3, 0, 4, 2, 1♪0, 0, 0, 0, 0
Loops♪ What values are stored in the array arr after the following code is executed? int[] arr = {1, 2, 3, 4, 5}; int s = 0; for (int a : arr) { s += a; a = s; }♪0, 0, 0, 0, 0♪1, 2, 3, 4, 5♪0, 1, 3, 6, 10♪1, 3, 6, 10, 15♪1, 4, 10, 20, 35♪1, 2, 3, 4, 5
Loops♪ What is returned by mix(2008) if mix is defined as: public int mix(int n) { int[] counts = new int[10]; while (n > 0) { int d = n % 10; counts[d]++; n /= 10; } for (int d = 9; d >= 0; d--) for (int count = 1 ; count <= counts[d]; count++) n = n * 10 + d; return n; }♪28♪82♪2800♪8002♪8200 2♪8200 2
Loops♪ If method modify is defined as public int[] modify (int[] a) { a = new int[a.length]; for (int x : a) x++; return a; } what is the output from the following code segment? int[] arr = {1, 2, 3}; arr = modify(arr); System.out.println(Arrays.toString(arr));♪[0, 0, 0]♪[1, 1, 1]♪[1, 2, 3]♪[2, 3, 4]♪Unpredictable list of three int values♪[0, 0, 0]
Loops♪ What is the maximum value that can be returned by countSomething(n) for positive n, where the method countSomething is defined as follows: private int countSomething(int n) { int count = 0; for (int i = 0; i < 100; i++) { count += n % 2; n /= 2; n += 2; } return count; }♪100♪70♪69♪31♪30 1♪100
Loops♪ What values are stored in the array counts after the following code segment has been executed? int[] counts = new int[7]; int i = 0, inc = 1; for (int k = 1; k <= 100; k++) { counts[i++] += inc; if (i >= counts.length) { i %= counts.length; inc = -inc; } }♪0, 0, 0, 0, 0, 0, 0♪0, 0, 0, 0, 0, 1, 1♪1, 1, 0, 0, 0, 0, 0♪14, 14, 14, 14, 14, 15, 15♪15, 15, 14, 14, 14, 14, 14♪1, 1, 0, 0, 0, 0, 0
Loops♪ Which of the following arrays arr will end up unsorted after the following code segment has been executed? int i = 0, j = arr.length - 1; while (i < j) { if (arr[i] < 0) i++; else if (arr[j] > 0) j--; else { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; i++; j--; } }♪int[] arr = {1, 2, 3, -1, -2, -3};♪int[] arr = {-3, -2, -1, 1, 2, 3};♪int[] arr = {-3, -2, 1, -1, 2, 3};♪int[] arr = {-3, 2, -1, 1, -2, 3};♪int[] arr = {3, 2, 1, -1, -2, -3}; 1♪int[] arr = {1, 2, 3, -1, -2, -3};
Loops♪ What is the value of n after the following code is executed? int n = 2005; for (int i = 0; i < 50; i++) n = (n + 3) / 2;♪0♪1♪2♪3♪65 1♪3
Loops♪ What is the output of the following code segment? List<String> cities = new ArrayList<String>(); cities.add("Atlanta"); cities.add("Boston"); for (int i = 1; i < cities.size(); i++) cities.add(i, "+"); System.out.println(cities);♪[Atlanta, Boston]♪[Atlanta, +, Boston]♪[Atlanta, Boston, +]♪[Atlanta, +, Boston, +]♪No output because the program goes into an infinite loop 1♪No output because the program goes into an infinite loop 1
Loops♪ Which of the following best describes the loop invariant in the following code? double x = 3.0, y = 1.0; while (x - y > 0.01) { x = (x + y) / 2; y = 3.0 / x; }♪3♪x = 3♪xy = 3♪xy = 3 and x - y > 0.01♪x =♪xy = 3
Loops♪ What are the values in arr after the following statements are executed? int arr[] = {1, 1, 0, 0, 0}; for (int i = 2; i < arr.length; i++) arr[i] += arr[i-1] + arr[i-2];♪1 1 0 1 1♪1 1 2 1 0♪1 1 2 2 2♪1 1 2 3 5♪1 1 2 4 8♪1 1 2 3 5
Loops♪ What is the value of sum after the following code segment is executed? int p = 3, q = 1, sum = 0; while (p <= 10) { sum += p % q; p++; q++; }♪0♪10♪12♪14♪52 1♪12
Loops♪ Which of the following conditions must always be true after the following while loop finishes? while (hours < hours0 || (hours == hours0 && mins < mins0)) { mins += 5; if (mins >= 60) { mins -= 60; hours++; } }♪hours > hours0 && mins >= mins0♪hours >= hours0 && mins >= mins0♪hours < hours0 || (hours == hours0 && mins < mins0)♪hours >= hours0 && (hours != hours0 && mins >= mins0)♪hours >= hours0 && (hours != hours0 || mins >= mins0) 62♪hours >= hours0 && (hours != hours0 || mins >= mins0) 62
Loops♪ What are the values of m and n after the following code runs? int m = 20, n = 2, temp; for (int count = 1; count <= 20; count++) { temp = m; m = n + count; n = temp - count; }♪m = 230 n = -208♪m = 30 n = -8♪m = 12 n = -10♪m = -12 n = 8♪m = -190 n = 212♪m = 30 n = -8
Loops♪ Consider the method public int[] copyX(int[] arr) { int[] result = new int[arr.length]; for (int i = 0; i < arr.length; i++) { if (arr[i] <= 0) break; if (arr[i] > 10) break; result[i] = arr[i]; } return result; } Suppose it is rewritten as follows: public int[] copyX(int[] arr) { int[] result = new int[arr.length]; int i = 0; while (< condition >) { result[i] = arr[i]; i++; } return result; } Which of the following expressions can replace < condition > so that the second version is equivalent to the first one (that is, for any int[] parameter arr, it returns the same result as the first version)?♪i < arr.length && (arr[i] <= 0 || arr[i] > 10)♪(arr[i] <= 0 || arr[i] > 10) || i >= arr.length♪(arr[i] > 0 || arr[i] <= 10) && i < arr.length♪i < arr.length && !(arr[i] <= 0 && arr[i] > 10)♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74
Loops♪ Given int[] counts = {7, 2, 9, 0, 1, 5, 5, 3, 9}; What does find3(counts, 9) return? find3 is defined as follows: int find3(int[] a, int targetSum) { int i = 0, sum = 0; while (i < 3) { sum += a[i]; i++; } if (sum == targetSum) return 1; while (i < a.length) { sum += a[i] - a[i-3]; if (sum == targetSum) return i - 1; i++; } return -1; }♪-1♪1♪2♪3♪8 1♪-1
Loops♪ What are the values of a and b after the following code fragment is executed? int a = 3, b = 5; for (int i = 0; i < 10; i++) { int s = a + b; b = a - b; a = s; }♪0 and 96♪96 and 0♪96 and 96♪96 and 160♪160 and 96♪96 and 160
Loops♪ What is the value of sum after the following code is executed? int d1 = 1, d2 = 2; int[][] table = new int[8][8]; int r = 0, c = 0; for (int k = 0; k < 64; k++) { table[r][c] = 1; r = (r + d1) % 8; c = (c + d2) % 8; int temp = d1; d1 = d2; d2 = temp; } int sum = 0; for (r = 0; r < 8; r++) for (c = 0; c < 8; c++) sum += table[r][c];♪8♪15♪16♪22♪64♪16
Loops♪ What is the value of y after the following code is executed? int x = 123, y = 0; while (x > 0) { y *= 10; y += x % 10; x /= 10; }♪1♪3♪6♪12♪321♪321
Loops♪ Given MovingBall b = new MovingBall(8, 4, 1, -1); what are the values of mPosX and mPosY after 70 moves (that is, 70 calls to b.move())?♪74 and -68♪6 and 4♪4 and 2♪3 and 1♪1 and -1 1♪6 and 4
Loops♪ If MovingBall b = new MovingBall(9, 4, 1, 1); is defined, after how many moves (that is., calls to b.move()) will ball b hit position mPosX = 6, mPosY = 1?♪Never♪2♪3♪7♪30 110♪Never
Loops♪ Suppose all the elements in an array have different values. Let us say the array is “nearly sorted” (in ascending order) if each element’s position differs from its appropriate position in the sorted arrangement of the same array by at most 2 (in either direction). The following method takes an array where the first n elements are “nearly sorted” and properly sorts the array: void sortNearlySorted(int[] arr, int n) { int i = 0; while (i < n - 1) { if (arr[i+1] < arr[i]) swap(arr, i, i+1); if (i+2 < n && arr[i+2] < arr[i]) swap(arr, i, i+2); i++; } } Which of the following is a loop invariant for the while loop in the above method?♪arr[0] ... arr[n-1] are sorted and 0 <= i < n♪arr[0] ... arr[n-1] are nearly sorted and i < n-1♪arr[0] ... arr[i-1] are placed where they belong in the sorted array and arr[i] ... arr[n-1] are “nearly sorted”♪arr[i] < arr[i+1] and arr[i] < arr[i+2]♪arr[0] ... arr[n-3] are sorted 14. In the ABBAB language the alphabet has only two letters. A string of letters (including one-letter strings) is a valid word, if and only if the isValid method returns true for that string. isValid is defined as follows: public static boolean isValid (String word) { int n = word.length(); return n <= 1 || (isValid(word.substring(0, n-1)) && word.charAt(n-1) == 'B') || (isValid(word.substring(0, n-2)) && "BA".equals(word.substring(n-2))); } How many valid words of length 7 are there in the ABBAB language? (A) 2 (B) 3 (C) 15 (D) 23 (E) 34♪arr[0] ... arr[i-1] are placed where they belong in the sorted array and arr[i] ... arr[n-1] are “nearly sorted”
Loops♪ What is the output from the following code? int[] counts = new int[3]; for (int i = 0; i < 100; i++) for (int j = 0; j < 10; j++) counts[j % 3]++; System.out.println((counts[1] + counts[2]) / counts[0]);♪1♪1.5♪2♪2.5♪3♪1
Loops♪ What is displayed by System.out.println(expand(expand("1001"))); where expand is defined as follows? public String expand(String s) { String d = ""; for (int i = 0; i < s.length(); i++) switch (s.charAt(i)) { case '0': d += "01"; break; case '1': d += "10"; break; default: d += '*'; break; } return d; }♪1001♪1*0*0*1*♪10010110♪10*01*01*10*♪1001011001101001 130♪1001011001101001 130
Loops♪ What is the output from the following code? int count1 = 0, count2 = 0, inc = 1; for (int i = 0; i < 11; i++) { count1 += inc; inc = -inc; count2 += inc; } System.out.println(count1 - count2);♪0♪2♪-2♪22♪-22♪2
Loops♪ What is the output from the following code? int a = 0, b = 0; while (a < 3) { switch (a + b) { case 0: a++; case 1: case 2: b++; break; case 3: a++; break; default: b = 0; break; } System.out.print(b); }♪0123♪122011♪0122011♪0122123♪112300♪122011
Loops♪ What is the value of n after the following code is executed? int n = 0; while (n < 90) { for (int i = 0; i < 10; i++) { n += 3; if (n > 50) break; } n++; }♪51♪61♪91♪93♪104♪93
Loops♪ What is the set of all possible outputs of the following code when the user correctly follows the input instructions and the program terminates without an error? Scanner scanner = new Scanner(System.in); System.out.print( "Enter an integer from -1000 to 1000 (inclusive): "); int n = scanner.nextInt(); // Read an integer while (n > 0 && Math.sqrt(n) < 10.0) n++; System.out.println(n);♪{0, ..., 99, 100}♪{100, ..., 999, 1000}♪{-1000, -999, ..., 0} . {100, ..., 999, 1000}♪{-1000, -999, ..., 0, ..., 999, 1000}♪{-1000, -999, ..., 0, ..., 99} 140♪{-1000, -999, ..., 0} . {100, ..., 999, 1000}
Arrays♪ What values are stored in the array nums after the following code is executed? int[] nums = {3, 0, 4, 2, 1}; int len = nums.length; for (int i = 0; i < len; i++) for (int count = 1; count <= len; count++) nums[i] = nums[nums[i]];♪0, 0, 0, 0, 0♪0, 1, 2, 3, 4♪0, 0, 4, 2, 0♪0, 4, 2, 1, 3♪3, 0, 4, 2, 1♪0, 0, 0, 0, 0
Arrays♪ What values are stored in the array arr after the following code is executed? int[] arr = {1, 2, 3, 4, 5}; int s = 0; for (int a : arr) { s += a; a = s; }♪0, 0, 0, 0, 0♪1, 2, 3, 4, 5♪0, 1, 3, 6, 10♪1, 3, 6, 10, 15♪1, 4, 10, 20, 35♪1, 2, 3, 4, 5
Arrays♪ What is returned by mix(2008) if mix is defined as: public int mix(int n) { int[] counts = new int[10]; while (n > 0) { int d = n % 10; counts[d]++; n /= 10; } for (int d = 9; d >= 0; d--) for (int count = 1 ; count <= counts[d]; count++) n = n * 10 + d; return n; }♪28♪82♪2800♪8002♪8200 2♪8200 2
Arrays♪ Consider the following code segment: int[] counts = new int[3]; for (int i = 1; i <= 3; i++) counts[(int)(3 * Math.random())] += (int)(3 * Math.random()); System.out.println(Arrays.toString(counts)); Which of the following outputs can never occur?♪[0, 0, 0]♪[0, 1, 0]♪[0, 1, 2]♪[1, 1, 1]♪Any of the above can occur 1♪Any of the above can occur 1
Arrays♪ What values are stored in the array counts after the following code segment has been executed? int[] counts = new int[7]; int i = 0, inc = 1; for (int k = 1; k <= 100; k++) { counts[i++] += inc; if (i >= counts.length) { i %= counts.length; inc = -inc; } }♪0, 0, 0, 0, 0, 0, 0♪0, 0, 0, 0, 0, 1, 1♪1, 1, 0, 0, 0, 0, 0♪14, 14, 14, 14, 14, 15, 15♪15, 15, 14, 14, 14, 14, 14♪1, 1, 0, 0, 0, 0, 0
Arrays♪ Which of the following arrays arr will end up unsorted after the following code segment has been executed? int i = 0, j = arr.length - 1; while (i < j) { if (arr[i] < 0) i++; else if (arr[j] > 0) j--; else { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; i++; j--; } }♪int[] arr = {1, 2, 3, -1, -2, -3};♪int[] arr = {-3, -2, -1, 1, 2, 3};♪int[] arr = {-3, -2, 1, -1, 2, 3};♪int[] arr = {-3, 2, -1, 1, -2, 3};♪int[] arr = {3, 2, 1, -1, -2, -3}; 1♪int[] arr = {1, 2, 3, -1, -2, -3};
Arrays♪ What is the value of a[1] after the following code is executed? int[] a = {0, 2, 4, 1, 3}; for (int i = 0; i < a.length; i++) a[i] = a[(a[i] + 3) % a.length];♪0♪1♪2♪3♪4♪1
Arrays♪ What are the values in arr after the following statements are executed? int arr[] = {1, 1, 0, 0, 0}; for (int i = 2; i < arr.length; i++) arr[i] += arr[i-1] + arr[i-2];♪1 1 0 1 1♪1 1 2 1 0♪1 1 2 2 2♪1 1 2 3 5♪1 1 2 4 8♪1 1 2 3 5
Arrays♪ fun is defined as follows: public int fun(int[] v) { v[0]--; return v[0] + 2; } What is the value of v[0] after the following code segment is executed? int[] v = {3, 4, 5}; v[0] = fun(v);♪1♪2♪3♪4♪5♪4
Arrays♪ Consider the method public int[] copyX(int[] arr) { int[] result = new int[arr.length]; for (int i = 0; i < arr.length; i++) { if (arr[i] <= 0) break; if (arr[i] > 10) break; result[i] = arr[i]; } return result; } Suppose it is rewritten as follows: public int[] copyX(int[] arr) { int[] result = new int[arr.length]; int i = 0; while (< condition >) { result[i] = arr[i]; i++; } return result; } Which of the following expressions can replace < condition > so that the second version is equivalent to the first one (that is, for any int[] parameter arr, it returns the same result as the first version)?♪i < arr.length && (arr[i] <= 0 || arr[i] > 10)♪(arr[i] <= 0 || arr[i] > 10) || i >= arr.length♪(arr[i] > 0 || arr[i] <= 10) && i < arr.length♪i < arr.length && !(arr[i] <= 0 && arr[i] > 10)♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74♪i < arr.length && arr[i] > 0 && arr[i] <= 10 74
Arrays♪ Given int[] counts = {7, 2, 9, 0, 1, 5, 5, 3, 9}; What does find3(counts, 9) return? find3 is defined as follows: int find3(int[] a, int targetSum) { int i = 0, sum = 0; while (i < 3) { sum += a[i]; i++; } if (sum == targetSum) return 1; while (i < a.length) { sum += a[i] - a[i-3]; if (sum == targetSum) return i - 1; i++; } return -1; }♪-1♪1♪2♪3♪8 1♪-1
Arrays♪ Let us call an array “oscillating” if its values alternate going up and down, as follows: a[i-1] < a[i] and a[i] > a[i+1] for any odd i, 0 < i < n-1, where n is the number of elements in a. What is the big-O for an optimal algorithm that determines the minimum value in an oscillating array of length n? The median value? Minimum Median♪O(1) O(1)♪O(n/2) O(1)♪O(n) O(n)♪O(n) O(n log n)♪O(n) O(n2)♪O(n) O(n log n)
Arrays♪ If a is an int array of length 2 and a[0] and a[1] hold values 7 and 13 respectively, what are their values after fun(a) is called? The method fun is defined as follows: public void fun(int[] x) { x[0] = (int)(100.0 * x[0] / (x[0] + x[1])); x[1] = (int)(100.0 * x[1] / (x[0] + x[1])); }♪7 and 13♪35 and 27♪34 and 64♪35 and 65♪34 and 66♪35 and 27
Arrays♪ Consider a method public boolean isProcessedX(int n, int[] v) { if (n >= 2 && isProcessedX(n-1, v)) { v[n-1] = v[n-2]; return true; } else return false; } What happens if an int array s holds values 1, 2, 3, 4, 5 and isProcessedX(5, s) is called?♪s holds 1, 2, 3, 4, 5 and isProcessedX returns false♪s holds 1, 2, 3, 4, 4 and isProcessedX returns true♪s holds 1, 1, 1, 1, 1 and isProcessedX returns true♪IndexOutOfBoundsException♪Stack overflow error 90♪s holds 1, 2, 3, 4, 5 and isProcessedX returns false
Arrays♪ An array mix holds seven elements. For which seven values in mix will the value of the variable property be true after the following code segment is executed? boolean property = true; for (int i = 1; i < 6; i += 2) { if (mix[i] >= mix[i-1] || mix[i] >= mix[i+1]) property = false; }♪1, 2, 3, 4, 5, 6, 7♪7, 6, 5, 4, 3, 2, 1♪7, 1, 6, 2, 5, 3, 4♪1, 2, 3, 4, 3, 2, 1♪1, 5, 2, 6, 3, 7, 4♪7, 1, 6, 2, 5, 3, 4
Arrays♪ The method average3 below “simultaneously” replaces all elements in an array. Each element is replaced with the average of that element’s current value and its left and right neighbors. If a “neighbor” is outside the array, its value is assumed to be 0: void average3(double[] a) { int len = a.length; double[] tempSaved = new double[len]; for (int i = 0; i < len; i++) tempSaved[i] = a[i]; double leftNeighbor, rightNeighbor; for (int i = 0; i < len; i++) { if (i > 0) leftNeighbor = tempSaved[i-1]; else leftNeighbor = 0; if (i < len - 1) rightNeighbor = tempSaved[i+1]; else rightNeighbor = 0; a[i] = (leftNeighbor + tempSaved[i] + rightNeighbor) / 3; } } Suppose the first and last elements in v are zeroes. Which one of the following statements is FALSE after average3(v) is called? (Disregard all inaccuracies that may be introduced due to the floating-point arithmetic.)♪If v holds the values 0, 3, 6, 9, 12, 9, 6, 3, 0, the resulting array will hold 1, 3, 6, 9, 10, 9, 6, 3, 1.♪The sum of all the elements in v remains the same.♪If in the original array the sum of all the values in even positions, v[0]+v[2]+..., is the same as the sum of all the values in the odd positions, v[1]+v[3]+..., then the same will remain true for the resulting array.♪The maximum value in the resulting array does not exceed the maximum value in the original array.♪The position of the maximum element in the resulting array remains the same as in the original array or shifts to one of the two neighboring positions.♪The position of the maximum element in the resulting array remains the same as in the original array or shifts to one of the two neighboring positions.
Arrays♪ An array arr contains n integer elements whose values form an arithmetic sequence (that is, arr[i+1] - arr[i] == arr[i] - arr[i-1] for any 0 < i < n-1). What is the big-O for an optimal algorithm that determines whether such an array contains two given values?♪O(1)♪O(log n)♪O(2 log n)♪O(n)♪O(n2) 1♪O(1)
Arrays♪ Consider the following method: public void divide5(int[] a, int[] q, int[] r) { q[0] = a[0] / 5; r[0] = a[0] % 5; } What is the value of y[0] after the following statements are executed? int[] x = {21, 22, 23}, y = new int[3]; divide5(x, y, y);♪0♪1♪2♪4♪21♪1
Arrays♪ If array arr has five elements with values 0 1 2 3 4, what are the values in arr after the following code is executed? for (int k = 0; k < 5; k++) arr[k] = arr[arr[k]];♪0 1 2 3 4♪1 2 3 4 0♪1 2 2 2 2♪0 0 0 0 0♪1 2 3 4 4♪0 1 2 3 4
Arrays♪ What is the output from the following code? int[] counts = new int[3]; for (int i = 0; i < 100; i++) for (int j = 0; j < 10; j++) counts[j % 3]++; System.out.println((counts[1] + counts[2]) / counts[0]);♪1♪1.5♪2♪2.5♪3♪1
Arrays♪ Suppose an array A has n elements. Let’s call it periodic with a period of p if 0 < p < n and A[i] == A[i+p] for all 0 = i < n-p and p is the smallest such number. What is the period of array v after the following code is executed? int[] v = new int[100]; v[0] = 0; v[1] = 1; for (int i = 2; i < 100; i++) v[i] = v[i-1] - v[i-2];♪2♪3♪4♪6♪No period♪6
Arrays♪ What is the output from the following code? StringBuffer s = new StringBuffer("WYOMING"); int n = s.length(); for (int k = 0; k < 3; k++) { char temp = s.charAt(n-1); for (int i = k+1; i < n; i++) s.setCharAt(i, s.charAt(i-1)); s.setCharAt(k, temp); } System.out.println(s);♪YOMINGW♪MINGWYO♪GWWWWWW♪MINGOYW♪GNIMOYW 122♪GWWWWWW
Arrays♪ Consider the following two versions of the method mixUp: public void mixUp(int[] x, int[] y) { x[0] = x[0] - 2 * x[0] * y[1]; y[1] = y[1] - 2 * x[0] * y[0]; } public void mixUp(int[] x, int[] y) { int d = 2 * x[0] * y[1]; x[0] -= d; y[1] -= d; } Suppose the following arrays are declared and initialized: int[] a = {1, 1}, b = {0, 0}, c = {1, 1}; Which of the following calls to mixUp result in the same values in a, b, and c for both versions of the code? I. mixUp(a, a) II. mixUp(a, b) III. mixUp(a, c)♪I only♪II only♪I and II♪II and III♪I, II, and III 1♪I and II
Arrays♪ Consider the following class that represents a set of checkboxes: public class CheckBoxSet { private Toggleable[] buttons; public CheckBoxSet(int nButtons) { < missing statements > } public int numButtons() { return buttons.length; } public void push(int k) { buttons[k].toggle(); } public boolean isOn(int k) { return buttons[k].isOn(); } public void clear() { for (int k = 0; k < buttons.length; k++) if (buttons[k].isOn()) buttons[k].toggle(); } } Which of the following can replace < missing statements > in the CheckBoxSet constructor? I. buttons = new Toggleable[nButtons]; for (int k = 0; k < buttons.length; k++) buttons[k] = new ToggleSwitch(); II. buttons = new ToggleSwitch[nButtons]; clear(); III. buttons = new ToggleSwitch[nButtons]; for (int i = 0; i < buttons.length; i++) if (buttons[i].isOn()) buttons[i].toggle();♪I only♪II only♪I and II♪II and III♪I, II, and III 132♪I only
Arrays♪ An integer array a has 19 elements. What is the value of the middle element after the following code is executed? int n = 19; for (int i = 0; i < n; i++) a[i] = i+1; for (int i = 0, j = n-1; i <= j; i++, j--) a[(i+j)/2] -= (a[i] + a[j]) / 2;♪0♪10♪-41♪-62♪-71 1♪0
Arrays♪ Given int[] a = {1, 3, 5, 7, 9, 11, 13}; what are the values in a after disarray(a, 7) is called? The method disarray is defined as follows: public void disarray(int[] a, int n) { if (n > 1) { disarray(a, n-1); a[n-1] += a[n-2]; } }♪1, 4, 9, 16, 25, 36, 49♪1, 4, 8, 12, 16, 20, 24♪1, 8, 12, 16, 20, 24, 13♪1, 24, 20, 16, 12, 8, 4♪None of the above 2♪1, 4, 9, 16, 25, 36, 49
ArrayList♪ What is the output from the following code? ArrayList<Integer> list = new ArrayList<Integer>(); list.add(2); list.add(1); list.add(0); int n = list.size(); for (int i = 0; i < n; i++) { int v = list.get(i); if (v > 0) list.add(0, v); } System.out.println(list);♪[2, 1, 0, 1, 2]♪[2, 1, 0, 2, 1]♪[2, 1, 2, 1, 0]♪[2, 2, 2, 2, 1, 0]♪No output: the program goes into an “infinite” loop and eventually runs out of memory. Questions 8-10 use the following classes: public class CountDown { private int count; public CountDown() { } public CountDown(int initCount) { count = initCount; } public boolean hasMore() { return count > 0; } public int next() { < missing code > } } public class CountDown3 extends CountDown { public CountDown3() { < missing code > } } public class Test { public static void main(String[] args) { CountDown c = new CountDown(3); while (c.hasMore()) System.out.print(c.next()); } } 4♪[2, 2, 2, 2, 1, 0]
ArrayList♪ What is the output from the following code segment? ArrayList<String> list = new ArrayList<String>(); list.add("A"); list.add("B"); list.add("C"); list.add("D"); for (int i = 0; i < list.size(); i++) list.add(list.remove(i)); System.out.println(list);♪[A, B, C, D]♪[B, D, C, A]♪[B, C, D, A]♪[D, C, B, A]♪IndexOutOfBoundsException♪[B, D, C, A]
ArrayList♪ What is the output from the following code segment? ArrayList<Integer> numbers = new ArrayList<Integer>(); numbers.add(1); numbers.add(2); numbers.add(3); numbers.add(4); numbers.set(2, numbers.remove(1)); System.out.println(numbers);♪[1, 3, 2]♪[1, 2, 4]♪[1, 3, 4]♪[2, 1, 3, 4]♪None of the above♪[1, 3, 2]
ArrayList♪ Which of the following is not a method of java.util.ArrayList<String>?♪add(String x);♪remove(Object x);♪insert(int i, String x);♪contains(Object x);♪set(int i, String x);♪insert(int i, String x);
ArrayList♪ What is the output of the following code segment? List<String> cities = new ArrayList<String>(); cities.add("Atlanta"); cities.add("Boston"); for (int i = 1; i < cities.size(); i++) cities.add(i, "+"); System.out.println(cities);♪[Atlanta, Boston]♪[Atlanta, +, Boston]♪[Atlanta, Boston, +]♪[Atlanta, +, Boston, +]♪No output because the program goes into an infinite loop 1♪No output because the program goes into an infinite loop 1
ArrayList♪ What is the output of the following code? List<Integer> nums = new ArrayList<Integer>(3); nums.add(1); nums.add(2); nums.add(0, nums.get(1)); Integer x = nums.get(0); Integer y = nums.get(2); if (x == y) System.out.println(x + " is equal to " + y); else System.out.println(x + " is NOT equal to " + y);♪1 is equal to 2♪1 is NOT equal to 2♪2 is equal to 2♪2 is NOT equal to 2♪IndexOutOfBoundsException♪2 is equal to 2
ArrayList♪ What is the output of the following code segment? List<String> words = new LinkedList<String>(); for (int k = 1; k <= 9; k++) words.add("word" + k); for (int k = 1; k <= words.size(); k++) if (k % 3 == 0) words.remove(k); System.out.println(words);♪[word1, word2, word4, word5, word7, word8]♪[word2, word3, word5, word6, word7, word8]♪[word2, word3, word5, word6, word8, word9]♪[word1, word2, word3, word5, word6, word7, word9]♪[word1, word2, word3, word5, word6, word8, word9]♪[word1, word2, word3, word5, word6, word7, word9]
ArrayList♪ Consider the following class: public class CallerId { private List<IncomingCall> calls; public CallerId() { calls = new LinkedList<IncomingCall>(); } public void add(IncomingCall call) { calls.add(call); } // precondition: calls != null; calls holds IncomingCall objects // postcondition: all objects such that getSource.equals(tel) are // removed from calls public void removeAll(String tel) { < code not shown > } < other methods not shown > } If removeAll works as specified in its pre- and postconditions, which of the following code segments can serve as removeAll’s body? I. for (int i = 0; i < calls.size(); i++) { if (calls.get(i).getSource().equals(tel)) calls.remove(i); } II. int i = 0; while (i < calls.size()) { if (calls.get(i).getSource().equals(tel)) calls.remove(i); else i++; } III. Iterator<IncomingCall> iter = calls.iterator(); while (iter.hasNext()) { if (iter.next().getSource().equals(tel)) iter.remove(); }♪I only♪II only♪I and II♪II and III♪I, II, and III 82♪II and III
ArrayList♪ SoccerTeam’s score method is intended to update the number of scored goals for a given player on the team and update the list of “most valuable players” (all of whom have the same score, the highest on the team). If the player’s new score is higher than the old best, the mvps list is updated to contain only that one player. However, the score method has an error. Which of the following actions would correct that error? I. Move Line 2 before Line 1 II. Replace Line 3 with if (goals == maxGoals && players[k] != mvps.get(0)) III. Replace Line 3 with if (goals == maxGoals && !mvps.contains(players[k]))♪I only♪II only♪I and II♪II and III♪I, II, and III♪I, II, and III
ArrayList♪ Which of the following would be an appropriate replacement for < missing statements > in SoccerTeam’s score method?♪mvps.set(0, players[k]);♪mvps.resize(0); mvps.add(players[k]);♪mvps = new ArrayList<SoccerPlayer>(); mvps.add(players[k]);♪mvps = new ArrayList<SoccerPlayer>(1); mvps.set(0, players[k]);♪delete mvps; mvps = new ArrayList<SoccerPlayer>(); mvps.add(players[k]); 17.AB The elements in an array of size n are first increasing (a[i] < a[i+1]), until they reach a maximum value, then decreasing (a[i] > a[i+1]). What are the respective big-O estimates for the number of comparisons in two optimal algorithms, one that finds a maximum value in such an array and another that sorts the array in ascending order? (A) O(log n) and O(n) (B) O(log n) and O(n log n) (C) O(n) and O(n) (D) O(n) and O(n log n) (E) O(n) and O(n2) 18.AB What is the output from the following code segment? Set<String> set = new TreeSet<String>(); String str = "A"; set.add(str); str += "B"; set.add(str); str += "C"; set.add(str); for (String s : set) System.out.print(s + "-"); (A) A- (B) ABC- (C) A-B-C- (D) A-AB-ABC- (E) None of the above 98♪mvps = new ArrayList<SoccerPlayer>(); mvps.add(players[k]);
ArrayList♪ The following interface Index describes the location of a document: public interface Index { String getKey(); Document getDocument(); } Document is a class that has a public method getSize(). An ArrayList<Index> folder describes a collection of documents. Which of the following expressions refers to size of the k-th document in folder?♪folder[k-1].getSize()♪folder[k-1].getDocument().getSize()♪folder.get(k-1).getDocument().getSize()♪((Document)(folder[k-1].getDocument())).getSize()♪((Document)folder.get(k-1)).getDocument().getSize() 12. Which of the following could safely appear and make sense in place of < condition > in some suitable context? if ( < condition > ) msg = new Message("o"); I. msg == null || msg.getStatus().equals("x") II. msg.getStatus().equals("x") || msg == null III. "x".equals(msg.getStatus()) || msg == null (A) I only (B) II only (C) I and II (D) II and III (E) I, II, and III 142♪folder.get(k-1).getDocument().getSize()
Strings♪ What is the output from String s = "La"; s.toUpperCase(); System.out.println(s + s.toLowerCase());♪Lala♪LAla♪LaLa♪laLA♪LA la 2♪Lala
Strings♪ Given String s = "SOLD"; which of the following calls does NOT return 1?♪s.lastIndexOf("OLD");♪s.lastIndexOf("OLD", 0);♪s.lastIndexOf("OLD", 1);♪s.lastIndexOf("OLD", 2);♪s.lastIndexOf("OLD", 3);♪s.lastIndexOf("OLD", 0);
Strings♪ What is the output from the following code segment? String s = "xoxoxo"; System.out.println(s.substring( s.indexOf(s.substring(2)), s.indexOf(s.substring(3))));♪x♪o♪xo♪oxoxo♪xoxoxo 18♪x
Strings♪ What is the output from the following code segment? String la = "-La", da = "-Da", temp; temp = la; la += da; da = temp; System.out.println(la + da);♪-La-Da♪-Da-La♪-La-Da-La♪-La-Da-La-Da♪None of the above 32♪-La-Da-La
Strings♪ What is the output from the following statement? System.out.println("123".substring(1) + "123".substring(2) + "123".substring(3));♪23♪123♪233♪123233♪112123 34♪233
Strings♪ Consider the following method mystery: public String mystery(String str1, String str2) { if (str1.length() <= 1 || str2.length() <= 1) return str2 + str1; else return mystery (str2.substring(1), str1.substring(1)); } What will System.out.println(mystery("GOOD", "IDEA")); display?♪DA♪AD♪IGDOEOAD♪GDEAIOOD♪GIODOEDA 1♪DA
Strings♪ What is displayed by System.out.println("1" + new Integer(2) + 3);♪The statement has a syntax error and won’t compile♪6♪15♪123♪ClassCastException♪123
Strings♪ twist is defined as follows: public void twist(String[] w) { String temp = w[0].substring(0, 1); w[0] = w[1].substring(0, 1) + w[0].substring(1); w[1] = temp + w[1].substring(1); } What is the output of the following code segment? String[] words = {"HOW", "NEAT"}; twist(words); System.out.println(words[0] + " " + words[1]);♪NOW NOW♪HOW HOW♪NOW HOW♪HOW NEAT♪NOW HEAT♪NOW HEAT
Strings♪ What is the output from the following code? String s = "ONION"; System.out.println( s.substring(1, 5).substring(1, 4).substring(0, 3));♪I♪IO♪ION♪ONI♪NION♪ION
Strings♪ Suppose calls and name are initialized as follows: Call[] calls = { new IncomingCallWithName("800-749-2000", "Pizza Palace"), new IncomingCall("888-237-3757"), new IncomingCallWithName("800-555-2134", "Burger Heaven"), }; String name = "Pizza Palace"; The following code segment is intended to count the number of Call objects in the calls array that came from a given source: int count = 0; for (Call call : calls) if ( < condition > ) count++; Which of the following replacements for < condition > will compile with no errors and correctly set count to 1?♪call.getSource().indexOf(name) >= 0♪((IncomingCallWithName)call).getSource().indexOf(name) >= 0♪call.getName().equals(name)♪((IncomingCallWithName)call).getName().equals(name)♪None of the above♪call.getSource().indexOf(name) >= 0
Strings♪ Consider the following method prepare: public String prepare(String s) { int k = s.length() / 2; if (k <= 1) return s; return s.charAt(k - 1) + prepare(s.substring(0, k - 1) + s.substring(k + 1, 2*k)) + s.charAt(k); } what does prepare("LEMONADE") return?♪ONMAEDLE♪OLEMADEN♪OMELEDAN♪OOOONNNN♪LEMONADE♪OMELEDAN
Strings♪ The following method packed analyzes a string passed to it and returns a new string: public String packed(String msg) { String packedMsg = ""; for (int i = 0; i < msg.length(); i++) { if (msg.charAt(i) != '.') { int len = packedMsg.length(); if (len == 0 || msg.charAt(i) != packedMsg.charAt(len-1)) packedMsg += msg.substring(i, i+1); } } return packedMsg; } For which of the following values of msg, is packed(msg) NOT equal to packed("xxo.ooo.xx.x")?♪xxo..ooo..xx..x♪..xxooooooxxxx..♪xxooooxxx♪xxooooooxxox♪xox 2♪xxooooooxxox
Strings♪ Suppose the method fun is defined as follows: public void fun(int[][] m, String s) { for (int i = 1; i < s.length(); i++) { int r = Character.digit(s.charAt(i), 10); int c = Character.digit(s.charAt(i-1), 10); m[r][c]++; } } What is the output when the following code fragment is executed? int[][] m = new int[10][10]; String s = "20012002"; fun(m, s); int sum = 0; for (int k = 0; k < 10; k++) sum += m[k][k]; System.out.println(sum);♪1♪2♪4♪7♪8 106♪2
Strings♪ The method public boolean xyz(String s) { return s.length() >= 3 && ((s.charAt(0) == s.charAt(1) && s.charAt(1) == s.charAt(2)) || xyz(s.substring(1))); } returns true if and only if♪s contains three or more of the same characters in a row♪s starts with three or more of the same characters♪s ends with three or more of the same characters♪s contains three or more of the same characters♪s[0] is the same as two other characters in s♪s contains three or more of the same characters in a row
Strings♪ In the ABBAB language the alphabet has only two letters. A string of letters (including one-letter strings) is a valid word, if and only if the isValid method returns true for that string. isValid is defined as follows: public static boolean isValid (String word) { int n = word.length(); return n <= 1 || (isValid(word.substring(0, n-1)) && word.charAt(n-1) == 'B') || (isValid(word.substring(0, n-2)) && "BA".equals(word.substring(n-2))); } How many valid words of length 7 are there in the ABBAB language?♪2♪3♪15♪23♪34♪34
Strings♪ Given String a = "a", b = "b", zero = ""; Integer c = new Integer(0); what is the output of System.out.println( ((a+b)+c).equals(a+(b+c)) + " " + (c + zero).equals(zero + c) + " " + (a + null).equals(a + "null"));♪false false false♪false true true♪true false true♪true true false♪true true true♪true true true
Strings♪ The method mixup is defined as follows: String mixup(String word) { if (word.length() == 1) return ""; else return mixup(word.substring(0, word.length() - 1)) + word.charAt(word.length() - 2); } What is the value of the string returned by mixup("IDEAL")?♪IDEAL♪IDEA♪LEAD♪LEDA♪DEAL 153♪IDEA
Fields♪ Suppose the class CountDown has been completed correctly, as described in Question 8, and we have replaced CountDown c = new CountDown(3); with CountDown c = new CountDown3(); in main . The project still compiles and the output is still 321. Which of the following can replace < missing code > in CountDown3’s constructor? I. System.out.print("321"); II. super(3); III. super(); count = 3;♪I only♪II only♪I or II♪II or III♪None of these will work♪I or II
Fields♪ The output from Gift gift1 = new Gift(100); Gift gift2 = new Gift(75); System.out.println(gift1 + " " + gift2 + " " + gift1.compareTo(gift2)); is, as expected, 100 75 25 Which one of the following alternative statements on Line *** in Gift would cause a syntax error or give a different output for this code?♪return value - otherGift.value;♪return value - otherGift.getValue();♪return getValue() - otherGift.getValue();♪return this.getValue() - otherGift.getValue();♪All of the above compile with no errors and produce the same output. 40♪All of the above compile with no errors and produce the same output. 40
Fields♪ Consider the following subclass of Gift: public class WrappedGift extends Gift { private Gift gift; public WrappedGift(Gift g) { gift = g; } public int getValue() { return gift.getValue(); } public int compareTo(Gift other) { return gift.compareTo(other); } public String toString() { return gift.toString(); } } What is the output from the following code? Gift gift1 = new Gift(100); Gift gift2 = new WrappedGift(new Gift(75)); System.out.println(gift1 + " " + gift2 + " " + gift1.compareTo(gift2));♪Syntax error in the WrappedGift class♪100 75 25♪100 0 25♪100 0 100♪100 75 100 2♪100 75 100 2
Fields♪ Which of the following statements is true?♪A static variable cannot be initialized in a constructor.♪A static variable must be declared final.♪An instance variable can’t be declared final.♪A static method can’t access an instance variable.♪Only a static method can access a static variable. 52♪A static method can’t access an instance variable.
Fields♪ A class Particle has a private field double velocity and public methods double getVelocity() and void setVelocity(double v). It also has a method public void hit(Particle p) { < missing statements > } Which of the following could replace < missing statements > in hit to make it compile with no errors? I. double v = getVelocity(); setVelocity(p.getVelocity()); p.setVelocity(v); II. double v = velocity; velocity = p.getVelocity(); p.setVelocity(v); III. double v = velocity; velocity = p.velocity; p.velocity = v;♪I only♪II only♪I and II♪II and III♪I, II, and III 1♪I, II, and III 1
Fields♪ fun is defined as follows: public int fun(int[] v) { v[0]--; return v[0] + 2; } What is the value of v[0] after the following code segment is executed? int[] v = {3, 4, 5}; v[0] = fun(v);♪1♪2♪3♪4♪5♪4
Fields♪ If a is an int array of length 2 and a[0] and a[1] hold values 7 and 13 respectively, what are their values after fun(a) is called? The method fun is defined as follows: public void fun(int[] x) { x[0] = (int)(100.0 * x[0] / (x[0] + x[1])); x[1] = (int)(100.0 * x[1] / (x[0] + x[1])); }♪7 and 13♪35 and 27♪34 and 64♪35 and 65♪34 and 66♪35 and 27
Fields♪ Consider two methods: public int f(int x) { return x + 2; } and public int g(int x) { return x * 2; } What is the value of x after the following statements are executed? int x = 1; x += f(g(x)) - g(f(x));♪-9♪-2♪-1♪3♪7 104♪-1
Fields♪ Consider the following method: public void divide5(int[] a, int[] q, int[] r) { q[0] = a[0] / 5; r[0] = a[0] % 5; } What is the value of y[0] after the following statements are executed? int[] x = {21, 22, 23}, y = new int[3]; divide5(x, y, y);♪0♪1♪2♪4♪21♪1
Fields♪ Consider the following two versions of the method mixUp: public void mixUp(int[] x, int[] y) { x[0] = x[0] - 2 * x[0] * y[1]; y[1] = y[1] - 2 * x[0] * y[0]; } public void mixUp(int[] x, int[] y) { int d = 2 * x[0] * y[1]; x[0] -= d; y[1] -= d; } Suppose the following arrays are declared and initialized: int[] a = {1, 1}, b = {0, 0}, c = {1, 1}; Which of the following calls to mixUp result in the same values in a, b, and c for both versions of the code? I. mixUp(a, a) II. mixUp(a, b) III. mixUp(a, c)♪I only♪II only♪I and II♪II and III♪I, II, and III 1♪I and II
Fields♪ Consider the following method: public void mysteryMix(Integer a, Integer b) { a = new Integer(2 * a); b = a; } What is the output of the following code? Integer a = 1; Integer b = 2; mysteryMix(a, a); mysteryMix(a, b); System.out.println(a + " " + b);♪1 1♪1 2♪2 2♪1 4♪4 4♪1 2
Recursion♪ Suppose the method isSuch is defined as follows: public static boolean isSuch(int n) { return n > 2 && !isSuch(n - 2); } What is the output from System.out.println(isSuch(99) + " " + isSuch(100));♪false false♪false true♪true false♪true true♪StackOverflowError exception 1♪true true
Recursion♪ Given public class Plus { private String chars = "++++++++++"; public void printSome(int n) { if (n > 1) printSome(n-1); System.out.println(chars.substring(0, n)); } } public class Minus extends Plus { private String chars = "----------"; public void printSome(int n) { System.out.println(chars.substring(0, n)); if (n > 1) super.printSome(n-1); } } what is the output of Minus m = new Minus(); m.printSome(3);♪--- -- -♪- ++ ---♪--- - ++♪--- + --♪--- + ++ 12♪--- - ++
Recursion♪ Consider the following method: private boolean isSomething(int[] a, int n) { return n <= 2 || ((a[n-1] + a[n-3] == 2 * a[n-2]) && isSomething(a, n-1)); } For which of the following arrays isSomething(arr, arr.length) returns false?♪int[] arr = {0};♪int[] arr = {1, 2};♪int[] arr = {0, 3, 6};♪int[] arr = {1, 2, 4, 8};♪int[] arr = {1, 2, 3, 4, 5};♪int[] arr = {1, 2, 4, 8};
Recursion♪ Consider the following method mystery: public String mystery(String str1, String str2) { if (str1.length() <= 1 || str2.length() <= 1) return str2 + str1; else return mystery (str2.substring(1), str1.substring(1)); } What will System.out.println(mystery("GOOD", "IDEA")); display?♪DA♪AD♪IGDOEOAD♪GDEAIOOD♪GIODOEDA 1♪DA
Recursion♪ The method fun is defined as follows: public int fun(int n) { if (n == 1) return 1; else { int m = n/2; return fun(m) + 2 * m * (n-m) + fun(n - m); } } What does fun(9) return?♪0♪9♪18♪41♪81 38♪81 38
Recursion♪ Consider the method public String mystery(String s) { String s1 = s.substring(0, 1); String s2 = s.substring(1, s.length() - 1); String s3 = s.substring(s.length() - 1); if (s.length() <= 3) return s3 + s2 + s1; else return s1 + mystery(s2) + s3; } What is the output of System.out.println(mystery("DELIVER"));♪DELIVER♪DEVILER♪REVILED♪RELIVED♪DLEIEVR 48♪DEVILER
Recursion♪ What is the output of the following code? String barb = "BARBARA"; scramble(barb); System.out.println(barb); The method scramble is defined as follows: public String scramble(String str) { if (str.length() >= 2) { int n = str.length() / 2; str = scramble(str.substring(n)) + str.substring(0, n); } return str; }♪BARBARA♪ARBABAR♪AABAR♪ARBABARB♪ARABARBARB♪BARBARA
Recursion♪ Consider the following method: public int goFigure(int x) { if (x < 100) x = goFigure(x + 10); return (x - 1); } What does goFigure(60) return?♪59♪69♪95♪99♪109♪95
Recursion♪ Consider a method public boolean isProcessedX(int n, int[] v) { if (n >= 2 && isProcessedX(n-1, v)) { v[n-1] = v[n-2]; return true; } else return false; } What happens if an int array s holds values 1, 2, 3, 4, 5 and isProcessedX(5, s) is called?♪s holds 1, 2, 3, 4, 5 and isProcessedX returns false♪s holds 1, 2, 3, 4, 4 and isProcessedX returns true♪s holds 1, 1, 1, 1, 1 and isProcessedX returns true♪IndexOutOfBoundsException♪Stack overflow error 90♪s holds 1, 2, 3, 4, 5 and isProcessedX returns false
Recursion♪ Consider the following method prepare: public String prepare(String s) { int k = s.length() / 2; if (k <= 1) return s; return s.charAt(k - 1) + prepare(s.substring(0, k - 1) + s.substring(k + 1, 2*k)) + s.charAt(k); } what does prepare("LEMONADE") return?♪ONMAEDLE♪OLEMADEN♪OMELEDAN♪OOOONNNN♪LEMONADE♪OMELEDAN
Recursion♪ The method public boolean xyz(String s) { return s.length() >= 3 && ((s.charAt(0) == s.charAt(1) && s.charAt(1) == s.charAt(2)) || xyz(s.substring(1))); } returns true if and only if♪s contains three or more of the same characters in a row♪s starts with three or more of the same characters♪s ends with three or more of the same characters♪s contains three or more of the same characters♪s[0] is the same as two other characters in s♪s contains three or more of the same characters in a row
Recursion♪ In the ABBAB language the alphabet has only two letters. A string of letters (including one-letter strings) is a valid word, if and only if the isValid method returns true for that string. isValid is defined as follows: public static boolean isValid (String word) { int n = word.length(); return n <= 1 || (isValid(word.substring(0, n-1)) && word.charAt(n-1) == 'B') || (isValid(word.substring(0, n-2)) && "BA".equals(word.substring(n-2))); } How many valid words of length 7 are there in the ABBAB language?♪2♪3♪15♪23♪34♪34
Recursion♪ A recursive method upNdown is defined as follows: public void upNdown(int n) { if (n > 1) { if (n % 2 != 0) upNdown(n+1); else upNdown(n/2); System.out.print("*"); } } How many stars are displayed when upNdown(5) is called?♪1♪2♪3♪4♪5♪5
Recursion♪ Suppose Mergesort is implemented as follows: public void sort(int[] a, int n1, int n2) { if (n1 == n2) return; else if (n2 == n1 + 1) { if (a[n2] < a[n1]) swap(a, n1, n2); return; } int m = (n1 + n2) / 2; sort(a, n1, m); sort(a, m+1, n2); if (a[m] > a[m+1]) merge (a, n1, m, n2); } How many times will the method merge be called if an array a contains the values 2 1 4 3 6 5 8 7 and sort(a,0,7) is called?♪7♪4♪3♪1♪0♪0
Recursion♪ The class DrawingBoard extends JFrame and represents a window on the screen: public class DrawingBoard extends javax.swing.JFrame { private Drawable picture; public DrawingBoard(Drawable picture) { this.picture = picture; } public void paint(Graphics g) { picture.draw(g); } } Consider the following code segment: Picture picture = new Picture(); picture.add(picture); // Line *** DrawingBoard w = new DrawingBoard(picture); w.setBounds(50, 50, 400, 400); w.setVisible(true); What happens when we try to compile and execute this code?♪Syntax error on Line ***♪ClassCastException♪The code compiles and runs, but goes into an infinite loop♪StackOverflowError♪The code compiles and runs; a blank window is displayed♪StackOverflowError
Recursion♪ Given int[] a = {1, 3, 5, 7, 9, 11, 13}; what are the values in a after disarray(a, 7) is called? The method disarray is defined as follows: public void disarray(int[] a, int n) { if (n > 1) { disarray(a, n-1); a[n-1] += a[n-2]; } }♪1, 4, 9, 16, 25, 36, 49♪1, 4, 8, 12, 16, 20, 24♪1, 8, 12, 16, 20, 24, 13♪1, 24, 20, 16, 12, 8, 4♪None of the above 2♪1, 4, 9, 16, 25, 36, 49
Recursion♪ The method mixup is defined as follows: String mixup(String word) { if (word.length() == 1) return ""; else return mixup(word.substring(0, word.length() - 1)) + word.charAt(word.length() - 2); } What is the value of the string returned by mixup("IDEAL")?♪IDEAL♪IDEA♪LEAD♪LEDA♪DEAL 153♪IDEA
Algorithms♪ Two linked lists, made of ListNode nodes, can be “spliced” together: they can share a node (and all the subsequent nodes). Suppose each of the two lists has n nodes and holds positive Integer values. What is the worst-case time efficiency, in terms of n, of an optimal method that determines whether two such lists are “spliced”? The method must leave the lists unchanged.♪O(n)♪O(n log n)♪O(n2)♪O(n3)♪O(n4) 8♪O(n)
Algorithms♪ An array of size 15 holds four 1s and eleven 0s. All 1s are grouped together in one contiguous block. How many comparisons are needed in the worst case to find the exact placement of the block of 1s?♪4♪5♪6♪11♪12♪4
Algorithms♪ What is the running time big-O of the following method, in terms of n = list.size()? public int[] duplicateCounts(LinkedList<String> list) { int[] counts = new int[list.size()]; for (String s : list) for (int i = 0; i < list.size(); i++) if (s.equals(list.get(i))) counts[i]++; return counts; }♪O(n)♪O(n2)♪O(n2) + O(n)♪O(n3)♪O(n4)♪O(n3)
Algorithms♪ Suppose a and b are arrays of integers, each sorted in ascending order. The length of each array is n. Suppose we have an optimal algorithm that determines, for any given int s, whether s == a[i] + b[j] for some i and j. What is this algorithm’s worst-case running time big-O, in terms of n?♪O(log n)♪O((log n)2 )♪O(n)♪O(n log n)♪O(n2 ) 20♪O(n)
Algorithms♪ The integer values stored in a two-dimensional n-by-n array m have the following property: for any two values in the array, m[r1][c1] and m[r2][c2], if r1 < r2, then m[r1][c1] < m[r2][c2]. What is the worst-case time for an optimal algorithm that finds out whether a target value is in m?♪O(log n)♪O(n)♪O((log n)2 )♪O(nlog n)♪O(n2 ) 36♪O(n)
Algorithms♪ Consider a linked list with n nodes that hold integer values arranged in ascending order. What is the worst-case big-O of the best algorithm that determines whether such a list has several consecutive nodes whose values add up to a given sum?♪O(log n)♪O(n)♪O(n log n)♪O(n2)♪O(n3) Questions 18-19 use the following class Gift: public class Gift implements Comparable<Gift> { private int value; public Gift() { value = 0; } public Gift(int v) { value = v; } public int getValue() { return value; } public int compareTo(Gift otherGift) { return this.value - otherGift.value; // Line *** } public String toString() { return String.valueOf(getValue()); } } 18. The output from Gift gift1 = new Gift(100); Gift gift2 = new Gift(75); System.out.println(gift1 + " " + gift2 + " " + gift1.compareTo(gift2)); is, as expected, 100 75 25 Which one of the following alternative statements on Line *** in Gift would cause a syntax error or give a different output for this code? (A) return value - otherGift.value; (B) return value - otherGift.getValue(); (C) return getValue() - otherGift.getValue(); (D) return this.getValue() - otherGift.getValue(); (E) All of the above compile with no errors and produce the same output. 40♪O(n)
Algorithms♪ a and b are arrays of integers and each of them has n elements. a is sorted in ascending order and b is sorted in descending order. What is the big-O, in terms of n, for the number of comparisons in an optimal algorithm that determines whether there exists i, such that a[i] == b[i]?♪O(log n)♪O((log n)2)♪O(n)♪O(n log n)♪O(n2) 1♪O(log n)
Algorithms♪ An n by n two-dimensional array contains Comparable values. The values in each row are increasing. The columns alternate: in the first, third, and other odd columns the values are increasing and in the second, fourth, and other even columns the values are decreasing. What is the average big-O for an optimal algorithm that finds a given value in such an array?♪O(log n)♪O((log n)2)♪O(n)♪O(n log n)♪O(n2)♪O(log n)
Algorithms♪ What is the smallest required number of comparisons in an optimal algorithm (based on comparing values) that puts any THREE distinct values into a list in ascending order? What is the answer for FOUR distinct values?♪2 and 3♪3 and 4♪3 and 5♪3 and 6♪6 and 12 76♪3 and 5
Algorithms♪ Given int[] counts = {7, 2, 9, 0, 1, 5, 5, 3, 9}; What does find3(counts, 9) return? find3 is defined as follows: int find3(int[] a, int targetSum) { int i = 0, sum = 0; while (i < 3) { sum += a[i]; i++; } if (sum == targetSum) return 1; while (i < a.length) { sum += a[i] - a[i-3]; if (sum == targetSum) return i - 1; i++; } return -1; }♪-1♪1♪2♪3♪8 1♪-1
Algorithms♪ Let us call an array “oscillating” if its values alternate going up and down, as follows: a[i-1] < a[i] and a[i] > a[i+1] for any odd i, 0 < i < n-1, where n is the number of elements in a. What is the big-O for an optimal algorithm that determines the minimum value in an oscillating array of length n? The median value? Minimum Median♪O(1) O(1)♪O(n/2) O(1)♪O(n) O(n)♪O(n) O(n log n)♪O(n) O(n2)♪O(n) O(n log n)
Algorithms♪ Suppose an n by n matrix of “black” and “white” pixels (for example, 1s and 0s) represents a picture of a black blob that fills the southeastern corner of the picture. The blob’s boundary extends in a generally southwest-to-northeast direction. All the pixels below and to the right of any black pixel are black. For example: 0000000 0000001 0000011 0001111 0111111 1111111 1111111 What is the worst-case big-O, in terms of n, for the total number of integer additions plus pixel comparisons in an optimal algorithm that determines the area of a blob (the number of black pixels in the blob)?♪O(log n)♪O((log n)2)♪O(n)♪O(n log n)♪O(n2) 78♪O(n)
Algorithms♪ The method average3 below “simultaneously” replaces all elements in an array. Each element is replaced with the average of that element’s current value and its left and right neighbors. If a “neighbor” is outside the array, its value is assumed to be 0: void average3(double[] a) { int len = a.length; double[] tempSaved = new double[len]; for (int i = 0; i < len; i++) tempSaved[i] = a[i]; double leftNeighbor, rightNeighbor; for (int i = 0; i < len; i++) { if (i > 0) leftNeighbor = tempSaved[i-1]; else leftNeighbor = 0; if (i < len - 1) rightNeighbor = tempSaved[i+1]; else rightNeighbor = 0; a[i] = (leftNeighbor + tempSaved[i] + rightNeighbor) / 3; } } Suppose the first and last elements in v are zeroes. Which one of the following statements is FALSE after average3(v) is called? (Disregard all inaccuracies that may be introduced due to the floating-point arithmetic.)♪If v holds the values 0, 3, 6, 9, 12, 9, 6, 3, 0, the resulting array will hold 1, 3, 6, 9, 10, 9, 6, 3, 1.♪The sum of all the elements in v remains the same.♪If in the original array the sum of all the values in even positions, v[0]+v[2]+..., is the same as the sum of all the values in the odd positions, v[1]+v[3]+..., then the same will remain true for the resulting array.♪The maximum value in the resulting array does not exceed the maximum value in the original array.♪The position of the maximum element in the resulting array remains the same as in the original array or shifts to one of the two neighboring positions.♪The position of the maximum element in the resulting array remains the same as in the original array or shifts to one of the two neighboring positions.
Algorithms♪ An array arr contains n integer elements whose values form an arithmetic sequence (that is, arr[i+1] - arr[i] == arr[i] - arr[i-1] for any 0 < i < n-1). What is the big-O for an optimal algorithm that determines whether such an array contains two given values?♪O(1)♪O(log n)♪O(2 log n)♪O(n)♪O(n2) 1♪O(1)
Algorithms♪ SoccerTeam’s score method is intended to update the number of scored goals for a given player on the team and update the list of “most valuable players” (all of whom have the same score, the highest on the team). If the player’s new score is higher than the old best, the mvps list is updated to contain only that one player. However, the score method has an error. Which of the following actions would correct that error? I. Move Line 2 before Line 1 II. Replace Line 3 with if (goals == maxGoals && players[k] != mvps.get(0)) III. Replace Line 3 with if (goals == maxGoals && !mvps.contains(players[k]))♪I only♪II only♪I and II♪II and III♪I, II, and III♪I, II, and III
Algorithms♪ The elements in an array of size n are first increasing (a[i] < a[i+1]), until they reach a maximum value, then decreasing (a[i] > a[i+1]). What are the respective big-O estimates for the number of comparisons in two optimal algorithms, one that finds a maximum value in such an array and another that sorts the array in ascending order?♪O(log n) and O(n)♪O(log n) and O(n log n)♪O(n) and O(n)♪O(n) and O(n log n)♪O(n) and O(n2) 1♪O(log n) and O(n)
Algorithms♪ Suppose ListNode p1, p2 initially refer to two nodes in the same circular linked list. Under what condition does the following loop terminate? do { p1 = p1.getNext(); p2 = p2.getNext().getNext(); } while (p1 != p2);♪Always♪If and only if p1 == p2.getNext()♪If and only if the total number of nodes in the list is even♪If and only if the number of nodes from p2 to p1 (excluding both ends of this segment of the list) is even♪If and only if the list contains two nodes with the same info♪Always
